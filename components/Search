import { Page, Locator } from '@playwright/test';
import { ProductCard, ProductData } from './ProductCard';

export class SearchComponent {
  readonly page: Page;
  readonly searchInput: Locator;
  readonly productItems: Locator;
  readonly productTitleSelector: string;
  readonly productPriceSelector: string;

  constructor(page: Page) {
    this.page = page;
    this.searchInput = page.locator('header input[placeholder="Search..."]:visible');
    this.productItems = page.locator('[data-test="product-item"]');
    this.productTitleSelector = '[data-test="product-title"]';
    this.productPriceSelector = '[data-test="product-price"]';
  }

  async goto() {
    await this.page.goto('/');
    await this.page.waitForLoadState('domcontentloaded');
  }

  async searchFor(query: string) {
    await this.searchInput.fill(query);
    await Promise.all([
      this.page.waitForResponse(r =>
        r.url().includes('/graphql.json') && r.status() === 200
      ),
      this.searchInput.press('Enter')
    ]);
    await this.page.waitForLoadState('networkidle');
  }

  async listResults(): Promise<ProductData[]> {
    const count = await this.productItems.count();
    const results: ProductData[] = [];

    for (let i = 0; i < count; i++) {
      c
